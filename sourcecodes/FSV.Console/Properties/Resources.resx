<?xml version="1.0" encoding="utf-8"?>
<root>
    <!-- 
      Microsoft ResX Schema 
      
      Version 2.0
      
      The primary goals of this format is to allow a simple XML format 
      that is mostly human readable. The generation and parsing of the 
      various data types are done through the TypeConverter classes 
      associated with the data types.
      
      Example:
      
      ... ado.net/XML headers & schema ...
      <resheader name="resmimetype">text/microsoft-resx</resheader>
      <resheader name="version">2.0</resheader>
      <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
      <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
      <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
      <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
      <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
          <value>[base64 mime encoded serialized .NET Framework object]</value>
      </data>
      <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
          <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
          <comment>This is a comment</comment>
      </data>
                  
      There are any number of "resheader" rows that contain simple 
      name/value pairs.
      
      Each data row contains a name, and value. The row also contains a 
      type or mimetype. Type corresponds to a .NET class that support 
      text/value conversion through the TypeConverter architecture. 
      Classes that don't support this are serialized and stored with the 
      mimetype set.
      
      The mimetype is used for serialized objects, and tells the 
      ResXResourceReader how to depersist the object. This is currently not 
      extensible. For a given mimetype the value must be set accordingly:
      
      Note - application/x-microsoft.net.object.binary.base64 is the format 
      that the ResXResourceWriter will generate, however the reader can 
      read any of the formats listed below.
      
      mimetype: application/x-microsoft.net.object.binary.base64
      value   : The object must be serialized with 
              : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
              : and then encoded with base64 encoding.
      
      mimetype: application/x-microsoft.net.object.soap.base64
      value   : The object must be serialized with 
              : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
              : and then encoded with base64 encoding.
  
      mimetype: application/x-microsoft.net.object.bytearray.base64
      value   : The object must be serialized into a byte array 
              : using a System.ComponentModel.TypeConverter
              : and then encoded with base64 encoding.
      -->
    <xsd:schema xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata"
                id="root"
                xmlns="">
        <xsd:import namespace="http://www.w3.org/XML/1998/namespace"/>
        <xsd:element name="root" msdata:IsDataSet="true">
            <xsd:complexType>
                <xsd:choice maxOccurs="unbounded">
                    <xsd:element name="metadata">
                        <xsd:complexType>
                            <xsd:sequence>
                                <xsd:element name="value" type="xsd:string" minOccurs="0"/>
                            </xsd:sequence>
                            <xsd:attribute name="name" use="required" type="xsd:string"/>
                            <xsd:attribute name="type" type="xsd:string"/>
                            <xsd:attribute name="mimetype" type="xsd:string"/>
                            <xsd:attribute ref="xml:space"/>
                        </xsd:complexType>
                    </xsd:element>
                    <xsd:element name="assembly">
                        <xsd:complexType>
                            <xsd:attribute name="alias" type="xsd:string"/>
                            <xsd:attribute name="name" type="xsd:string"/>
                        </xsd:complexType>
                    </xsd:element>
                    <xsd:element name="data">
                        <xsd:complexType>
                            <xsd:sequence>
                                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1"/>
                                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2"/>
                            </xsd:sequence>
                            <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1"/>
                            <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3"/>
                            <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4"/>
                            <xsd:attribute ref="xml:space"/>
                        </xsd:complexType>
                    </xsd:element>
                    <xsd:element name="resheader">
                        <xsd:complexType>
                            <xsd:sequence>
                                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1"/>
                            </xsd:sequence>
                            <xsd:attribute name="name" type="xsd:string" use="required"/>
                        </xsd:complexType>
                    </xsd:element>
                </xsd:choice>
            </xsd:complexType>
        </xsd:element>
    </xsd:schema>
    <resheader name="resmimetype">
        <value>text/microsoft-resx</value>
    </resheader>
    <resheader name="version">
        <value>2.0</value>
    </resheader>
    <resheader name="reader">
        <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral,
            PublicKeyToken=b77a5c561934e089
        </value>
    </resheader>
    <resheader name="writer">
        <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral,
            PublicKeyToken=b77a5c561934e089
        </value>
    </resheader>
    <data name="ApplicationTerminated" xml:space="preserve">
    <value>FSV terminated abruptly.</value>
  </data>
    <data name="ApplicationVersion" xml:space="preserve">
      <value>FolderSecurityViewer CLI ({0}), Version: {1}</value>
  </data>
    <data name="ArgumentEmptyError" xml:space="preserve">
    <value>Enter {0} to start scan.</value>
  </data>
    <data name="ArgumentPathDescriptionText" xml:space="preserve">
    <value>A path of directory to scan. Use quotes if the path has whitespace in it.</value>
  </data>
    <data name="ArgumentServerDescriptionText" xml:space="preserve">
    <value>A name of shared server to scan.</value>
  </data>
    <data name="ArgumentUserDescriptionText" xml:space="preserve">
    <value>A name of user (either user or domain\\user)</value>
  </data>
    <data name="DatabaseUnavailable" xml:space="preserve">
    <value>Database has not been set up.</value>
  </data>
    <data name="DirectoryAccessDeniedError" xml:space="preserve">
    <value>Access denied:</value>
  </data>
    <data name="DirectoryNotExistsError" xml:space="preserve">
    <value>{0} does not exist.</value>
  </data>
    <data name="ExportingText" xml:space="preserve">
    <value>Exporting...</value>
  </data>
    <data name="FolderReportCaption" xml:space="preserve">
    <value>Folder Report</value>
  </data>
    <data name="FolderReportDescription" xml:space="preserve">
    <value>Start Folder Report</value>
  </data>
    <data name="FolderReportException" xml:space="preserve">
    <value>Failed to export folder report due to unhandled exception.</value>
  </data>
    <data name="FolderReportExportedText" xml:space="preserve">
    <value>Folder report exported to "{0}".</value>
  </data>
    <data name="FolderScanCompleteText" xml:space="preserve">
    <value>Scan completed with total {0} folders.</value>
  </data>
    <data name="NoResultToExportText" xml:space="preserve">
    <value>No result generated to export.</value>
  </data>
    <data name="OptionDatabaseDescriptionText" xml:space="preserve">
    <value>Saves the report to database.</value>
  </data>
    <data name="OptionExportDescriptionText" xml:space="preserve">
    <value>Export to file - excel, csv, or html. Default is HTML</value>
  </data>
    <data name="OptionExportPathDescriptionText" xml:space="preserve">
    <value>An export file path.</value>
  </data>
    <data name="OptionPermissionSubFoldersDescriptionText" xml:space="preserve">
    <value>Scans the differences of permissions deep in the directory structure, and exports the result.</value>
  </data>
    <data name="OwnerReportCaption" xml:space="preserve">
    <value>Owner Report</value>
  </data>
    <data name="OwnerReportDescription" xml:space="preserve">
    <value>Start Owner Report</value>
  </data>
    <data name="OwnerReportException" xml:space="preserve">
    <value>Failed to export owner report due to unhandled exception.</value>
  </data>
    <data name="OwnerReportExportedText" xml:space="preserve">
    <value>Owner report exported to "{0}"</value>
  </data>
    <data name="OwnerReportScanningText" xml:space="preserve">
    <value>Scanning {0} for owner {1}...</value>
  </data>
    <data name="PermissionReportDbException" xml:space="preserve">
    <value>Failed to store permission report in the database.</value>
  </data>
    <data name="PermissionReportDescription" xml:space="preserve">
    <value>Start Permission Report</value>
  </data>
    <data name="PermissionReportDifferenceException" xml:space="preserve">
    <value>Failed to export permission differences</value>
  </data>
    <data name="PermissionReportDifferenceExportedText" xml:space="preserve">
    <value>Hierarchical permissions exported to {0}.</value>
  </data>
    <data name="PermissionReportDifferenceScanCompleteText" xml:space="preserve">
    <value>Scanned {0}: {1} permissions.</value>
  </data>
    <data name="PermissionReportDifferenceScanFailedText" xml:space="preserve">
    <value>Directory is inaccesible: {0}</value>
  </data>
    <data name="PermissionReportDifferenceUnhandledException" xml:space="preserve">
    <value>Failed to export permission differences due to an unhandled exception.</value>
  </data>
    <data name="PermissionReportExportedText" xml:space="preserve">
    <value>Permission report exported to "{0}".</value>
  </data>
    <data name="PermissionReportFileExportException" xml:space="preserve">
    <value>Failed to export permission report.</value>
  </data>
    <data name="PermissionReportNoDifferenceText" xml:space="preserve">
    <value>No difference of permission found in sub-directories.</value>
  </data>
    <data name="PermissionReportNotExportedText" xml:space="preserve">
    <value>A permission report could not be generated. Please check the log.</value>
  </data>
    <data name="PermissionReportSavedInDbText" xml:space="preserve">
    <value>Permission report saved in database.</value>
  </data>
    <data name="PermissionReportScanCompleteText" xml:space="preserve">
    <value>Scan completed with total {0} permissions.</value>
  </data>
    <data name="PrimaryArgumentError" xml:space="preserve">
    <value>The primary argument cannot be null.</value>
  </data>
    <data name="ScanFailedException" xml:space="preserve">
    <value>Scan failed.</value>
  </data>
    <data name="ScanningText" xml:space="preserve">
    <value>Scanning {0}...</value>
  </data>
    <data name="SharedServerNotFoundError" xml:space="preserve">
    <value>Shared server "{0}" not found.</value>
  </data>
    <data name="ShareReportCaption" xml:space="preserve">
    <value>Share Report</value>
  </data>
    <data name="ShareReportDescription" xml:space="preserve">
    <value>Start Share Report</value>
  </data>
    <data name="ShareReportException" xml:space="preserve">
    <value>Failed to export share report due to unhandled exception.</value>
  </data>
    <data name="ShareReportExportCsvException" xml:space="preserve">
    <value>CSV export is not available for share reports.</value>
  </data>
    <data name="ShareReportExportedText" xml:space="preserve">
    <value>Share report exported to "{0}".</value>
  </data>
    <data name="ShareReportNotExportedText" xml:space="preserve">
    <value>Share report could not be exported. Please check the log.</value>
  </data>
    <data name="ShareReportOptionExportDescriptionText" xml:space="preserve">
    <value>Export to file - Excel, or HTML (HTML is default).</value>
  </data>
    <data name="ShareReportScanningText" xml:space="preserve">
    <value>Scanning {0} for shares...</value>
  </data>
    <data name="UnsupportedFormatError" xml:space="preserve">
    <value>Unsupported export format.</value>
  </data>
    <data name="UserInDirectoryText" xml:space="preserve">
    <value>User {0} in {1}</value>
  </data>
    <data name="UserPermissionReportCaption" xml:space="preserve">
    <value>User Permission Report</value>
  </data>
    <data name="UserPermissionReportDescription" xml:space="preserve">
    <value>Start User Permission Report</value>
  </data>
    <data name="UserPermissionReportExportedText" xml:space="preserve">
    <value>User permission report exported to "{0}".</value>
  </data>
    <data name="UserPermissionReportFileExportException" xml:space="preserve">
    <value>Failed to export user permission report.</value>
  </data>
    <data name="UserPermissionReportNotExportedText" xml:space="preserve">
    <value>The user permission report could not be exported. Please check the log.</value>
  </data>
    <data name="UserPermissionReportScanningText" xml:space="preserve">
    <value>Scanning {0} for user {1}...</value>
  </data>
    <data name="ValueNullOrWhitespaceException" xml:space="preserve">
    <value>Value cannot be null or whitespace.</value>
  </data>
</root>