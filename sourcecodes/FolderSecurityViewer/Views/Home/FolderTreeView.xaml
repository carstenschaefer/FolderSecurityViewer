<UserControl x:Class="FolderSecurityViewer.Views.Home.FolderTreeView"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
             xmlns:vm="clr-namespace:FSV.ViewModel;assembly=FSV.ViewModel"
             xmlns:controls="clr-namespace:FolderSecurityViewer.Controls"
             xmlns:res="clr-namespace:FSV.Resources;assembly=FSV.Resources"
             xmlns:home="clr-namespace:FSV.ViewModel.Home;assembly=FSV.ViewModel"
             mc:Ignorable="d"
             d:DesignHeight="450" d:DesignWidth="800" d:DataContext="{d:DesignInstance Type=home:FolderTreeViewModel}">
    <UserControl.Resources>
        <ContextMenu x:Key="StandaloneContextMenu">
            <MenuItem Header="{x:Static res:PermissionResource.PermissionReportCaption}" InputGestureText="Ctrl + O"
                      Command="{Binding ReportCommand}" />
            <MenuItem Header="{x:Static res:PermissionResource.MenuShowSavedReportCaption}"
                      Command="{Binding ReportCommand}" CommandParameter="{x:Static vm:ReportType.SavedPermission}" />
            <Separator />
            <MenuItem Header="{x:Static res:FolderReportResource.ReportCaption}" InputGestureText="Ctrl + Shift + O"
                      Command="{Binding ReportCommand}" CommandParameter="{x:Static vm:ReportType.Folder}" />
            <Separator />
            <MenuItem Header="{x:Static res:HomeResource.MenuPropertiesCaption}" Command="{Binding PropertiesCommand}" />
            <MenuItem Header="{x:Static res:HomeResource.MenuOpenExplorerCaption}"
                      Command="{Binding OpenExplorerCommand}" />
            <MenuItem Header="{x:Static res:HomeResource.MenuOpenCmdCaption}" Command="{Binding OpenConsoleCommand}" />
            <MenuItem Header="{x:Static res:HomeResource.MenuCopyPathCaption}"
                      Command="{Binding CopyPathToClipboardCommand}" />
            <Separator />
            <MenuItem Header="{x:Static res:HomeResource.RemoveUncPathCaption}"
                      Command="{Binding RemoveUncShareCommand}" />
        </ContextMenu>

        <ContextMenu x:Key="NoStandaloneContextMenu">
            <MenuItem Header="{x:Static res:HomeResource.RemoveUncPathCaption}"
                      Command="{Binding RemoveUncShareCommand}" />
        </ContextMenu>

        <x:Array x:Key="EmptyFolderTreeItems" Type="home:LoadingFolderTreeItemViewModel">
            <x:Static Member="home:LoadingFolderTreeItemViewModel.Loading" />
        </x:Array>

        <HierarchicalDataTemplate DataType="{x:Type home:FolderTreeItemViewModel}" ItemsSource="{Binding Items}">
            <StackPanel Orientation="Horizontal" HorizontalAlignment="Stretch">
                <Image Width="16" Height="16" Margin="0,0,0,0" Source="{Binding Image, Mode=OneWay}" />
                <TextBlock Text="{Binding DisplayName}" VerticalAlignment="Center" Margin="5, 0, 0, 0"
                           x:Name="PART_Text"
                           Foreground="{Binding Foreground, RelativeSource={RelativeSource AncestorType=TreeViewItem}}" />
            </StackPanel>
        </HierarchicalDataTemplate>

        <HierarchicalDataTemplate DataType="{x:Type home:LoadingFolderTreeItemViewModel}">
            <StackPanel Orientation="Horizontal" HorizontalAlignment="Stretch">
                <TextBlock Text="{Binding DisplayName}" VerticalAlignment="Center" Margin="5, 0, 0, 0"
                           x:Name="PART_Text"
                           Foreground="{Binding Foreground, RelativeSource={RelativeSource AncestorType=TreeViewItem}}" />
            </StackPanel>
        </HierarchicalDataTemplate>

        <Style x:Key="FolderTreeViewItemStyle" TargetType="TreeViewItem"
               BasedOn="{StaticResource {x:Type TreeViewItem}}">
            <Setter Property="IsSelected" Value="{Binding Selected, Mode=TwoWay}" />
            <Setter Property="IsExpanded" Value="{Binding Expanded, Mode=TwoWay}" />
            <Setter Property="ItemsSource" Value="{Binding Items}" />
            <Style.Triggers>
                <Trigger Property="IsSelected" Value="True">
                    <Setter Property="Background" Value="{StaticResource SelectionBrush}" />
                </Trigger>
                <MultiDataTrigger>
                    <MultiDataTrigger.Conditions>
                        <!--Do not use Empty property here as it is not updated when Items' count changes.-->
                        <Condition Binding="{Binding HasItems}" Value="True" />
                        <Condition Binding="{Binding Items.Count}" Value="0" />
                    </MultiDataTrigger.Conditions>
                    <Setter Property="ItemsSource" Value="{StaticResource EmptyFolderTreeItems}" />
                </MultiDataTrigger>
            </Style.Triggers>
        </Style>

        <Style TargetType="TreeView" BasedOn="{StaticResource {x:Type TreeView}}" x:Key="FolderTreeStyle">
            <Setter Property="ContextMenu" Value="{StaticResource NoStandaloneContextMenu}" />
            <Setter Property="ItemContainerStyle" Value="{StaticResource FolderTreeViewItemStyle}" />
            <Style.Triggers>
                <DataTrigger Binding="{Binding Standalone}" Value="True">
                    <Setter Property="ContextMenu" Value="{StaticResource StandaloneContextMenu}" />
                </DataTrigger>
            </Style.Triggers>
        </Style>
    </UserControl.Resources>

    <Grid>
        <Grid.RowDefinitions>
            <RowDefinition Height="Auto" />
            <RowDefinition Height="5" />
            <RowDefinition Height="*" />
        </Grid.RowDefinitions>
        <controls:CommandTextBox Grid.Row="0" Placeholder="{x:Static res:HomeResource.FolderPathPlaceholder}"
                                 IsReadOnly="{Binding IsWorking, Mode=OneWay}" IsReadOnlyCaretVisible="True"
                                 Text="{Binding SelectedPath, Mode=TwoWay, Delay=50, UpdateSourceTrigger=PropertyChanged}">
            <controls:CommandTextBox.InputBindings>
                <KeyBinding Command="{Binding OpenCommand}" CommandParameter="{x:Static vm:ReportType.Permission}"
                            Key="Return" />
            </controls:CommandTextBox.InputBindings>
            <controls:CommandTextBox.Buttons>
                <controls:IconButton ToolTip="{x:Static res:HomeResource.OpenCaption}" x:Name="ScanButton"
                                     Icon="{StaticResource OpenFolderIcon}"
                                     Command="{Binding OpenCommand}"
                                     CommandParameter="{x:Static vm:ReportType.Permission}"
                                     IsEnabled="{Binding IsWorking, Mode=OneWay, Converter={StaticResource InverseBoolConverter}}" />
                <controls:IconButton ToolTip="{x:Static res:HomeResource.ReloadTreeCaption}"
                                     Command="{Binding RefreshCommand}"
                                     Icon="{StaticResource RefreshIcon}"
                                     IsEnabled="{Binding IsWorking, Mode=OneWay, Converter={StaticResource InverseBoolConverter}}" />
            </controls:CommandTextBox.Buttons>
        </controls:CommandTextBox>
        <ProgressBar Grid.Row="2" HorizontalAlignment="Right" VerticalAlignment="Top" IsIndeterminate="True"
                     Margin="0, 12, 12, 0" IsEnabled="{Binding IsWorking, Mode=OneWay}" />
        <TreeView Grid.Row="2"
                  ItemsSource="{Binding Items}"
                  Style="{StaticResource FolderTreeStyle}"
                  TextInput="FolderTreeTextInput"
                  PreviewMouseDown="FolderTreePreviewMouseDown"
                  TreeViewItem.Expanded="FolderTreeExpanded"
                  TreeViewItem.Collapsed="FolderTreeExpanded"
                  SelectedItemChanged="FolderTreeSelectedItemChanged"
                  VirtualizingPanel.IsVirtualizing="True"
                  VirtualizingPanel.VirtualizationMode="Recycling" />
    </Grid>
</UserControl>