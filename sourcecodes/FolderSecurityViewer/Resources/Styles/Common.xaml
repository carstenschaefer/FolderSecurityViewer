<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:controls="clr-namespace:FolderSecurityViewer.Controls"
                    xmlns:helper="clr-namespace:FolderSecurityViewer.Helpers">

    <helper:WindowMinimizeCommand x:Key="MinimizeCommand" />
    <helper:WindowMaximizeCommand x:Key="MaximizeCommand" />
    <helper:WindowCloseCommand x:Key="CloseCommand" />

    <Style x:Key="VerticalSeparator" TargetType="Separator"
           BasedOn="{StaticResource {x:Static ToolBar.SeparatorStyleKey}}">
        <Setter Property="Background" Value="{StaticResource ForegroundColorBrush}" />
        <Setter Property="Margin" Value="5" />
        <Style.Triggers>
            <Trigger Property="IsEnabled" Value="False">
                <Setter Property="Opacity" Value="{StaticResource DisabledOpacity}" />
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="{x:Static SystemParameters.FocusVisualStyleKey}">
        <Setter Property="Control.Template">
            <Setter.Value>
                <ControlTemplate>
                    <Rectangle Stroke="{StaticResource AccentColorBrush2}"
                               RadiusX="{StaticResource SmallRadiusSize}"
                               RadiusY="{StaticResource SmallRadiusSize}"
                               StrokeThickness="1"
                               StrokeDashArray="1 1"
                               Margin="4" Opacity="{StaticResource DisabledOpacity}"
                               SnapsToDevicePixels="true" />
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="DialogWindowStyle" TargetType="{x:Type controls:CustomWindow}">
        <Setter Property="Background" Value="{StaticResource PrimaryColorBrush}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type controls:CustomWindow}">
                    <Grid>
                        <Border BorderBrush="{StaticResource ControlBorderBrush}" BorderThickness="1"
                                Background="{TemplateBinding Background}">
                            <Grid>
                                <Grid.RowDefinitions>
                                    <RowDefinition Height="Auto" />
                                    <RowDefinition Height="*" />
                                </Grid.RowDefinitions>
                                <Border Grid.Row="0" BorderThickness="0, 0, 0, 1"
                                        BorderBrush="{StaticResource ControlBorderBrush}"
                                        Background="{StaticResource ControlBrush}"
                                        helper:WindowDragBehavior.LeftMouseButtonDrag="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type Window}}}"
                                        helper:ShowSystemMenuBehavior.TargetWindow="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type Window}}}">
                                    <Grid HorizontalAlignment="Stretch">
                                        <Grid.ColumnDefinitions>
                                            <ColumnDefinition Width="*" />
                                            <ColumnDefinition Width="*" />
                                            <ColumnDefinition Width="*" />
                                        </Grid.ColumnDefinitions>
                                        <Label Grid.Column="0" Style="{StaticResource WindowTitleLabelStyle}"
                                               Content="{TemplateBinding Title}"
                                               HorizontalAlignment="Left" />
                                        <StackPanel Grid.Column="2" Orientation="Horizontal" VerticalAlignment="Top"
                                                    HorizontalAlignment="Right" Margin="0, 8, 8, 0"
                                                    Background="{StaticResource AccentColorBrush}">
                                            <Button Command="{StaticResource CloseCommand}"
                                                    CommandParameter="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type Window}}}"
                                                    Style="{StaticResource ToolTinyButtonStyle}">
                                                <Path Data="{StaticResource CloseIcon}" />
                                            </Button>
                                        </StackPanel>
                                    </Grid>
                                </Border>
                                <Grid Grid.Row="1">
                                    <ContentPresenter x:Name="WindowContent" Margin="10" />
                                </Grid>
                            </Grid>
                        </Border>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsActive" Value="False">
                            <Setter Property="Opacity" Value="{StaticResource InactiveOpacity}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="HomeWindowStyle" TargetType="{x:Type controls:CustomWindow}">
        <Setter Property="OverridesDefaultStyle" Value="True" />
        <Setter Property="Background" Value="{StaticResource PrimaryColorBrush}" />
        <Setter Property="BorderBrush" Value="{StaticResource ControlBorderBrush}" />
        <Setter Property="BorderThickness" Value="1" />
        <Setter Property="Margin" Value="0" />
        <Setter Property="Padding" Value="0" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type controls:CustomWindow}">
                    <Grid>
                        <Border Background="{TemplateBinding Background}"
                                BorderBrush="{TemplateBinding BorderBrush}"
                                BorderThickness="{TemplateBinding BorderThickness}">
                            <Grid>
                                <AdornerDecorator>
                                    <ContentPresenter x:Name="WindowContent" />
                                </AdornerDecorator>
                                <ResizeGrip x:Name="WindowResizeGrip" HorizontalAlignment="Right" IsTabStop="false"
                                            Visibility="Visible" VerticalAlignment="Bottom" />
                            </Grid>
                        </Border>
                        <Thumb x:Name="ThumbTop" Height="6" Margin="14,0" VerticalAlignment="Top" Cursor="SizeNS"
                               Opacity="0"
                               helper:WindowResizeBehavior.TopResize="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type Window}}}" />
                        <Thumb x:Name="ThumbTopLeft" Height="6" Width="6" VerticalAlignment="Top"
                               HorizontalAlignment="Left" Cursor="SizeNWSE" Opacity="0"
                               helper:WindowResizeBehavior.TopLeftResize="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type Window}}}" />
                        <Thumb x:Name="ThumbBottom" Height="6" Margin="14,0" VerticalAlignment="Bottom" Cursor="SizeNS"
                               Opacity="0"
                               helper:WindowResizeBehavior.BottomResize="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type Window}}}" />
                        <Thumb x:Name="ThumbTopRight" Height="6" Width="6" VerticalAlignment="Top"
                               HorizontalAlignment="Right" Cursor="SizeNESW" Opacity="0"
                               helper:WindowResizeBehavior.TopRightResize="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type Window}}}" />
                        <Thumb x:Name="ThumbRight" HorizontalAlignment="Right" Margin="0,14" Width="6" Cursor="SizeWE"
                               Opacity="0"
                               helper:WindowResizeBehavior.RightResize="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type Window}}}" />
                        <Thumb x:Name="ThumbBottomRight" Height="6" Width="6" VerticalAlignment="Bottom"
                               HorizontalAlignment="Right" Cursor="SizeNWSE" Opacity="0"
                               helper:WindowResizeBehavior.BottomRightResize="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type Window}}}" />
                        <Thumb x:Name="ThumbLeft" HorizontalAlignment="Left" Margin="0,14" Width="6" Cursor="SizeWE"
                               Opacity="0"
                               helper:WindowResizeBehavior.LeftResize="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type Window}}}" />
                        <Thumb x:Name="ThumbBottomLeft" Height="6" Width="6" VerticalAlignment="Bottom"
                               HorizontalAlignment="Left" Cursor="SizeNESW" Opacity="0"
                               helper:WindowResizeBehavior.BottomLeftResize="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type Window}}}" />
                    </Grid>
                    <ControlTemplate.Triggers>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="ResizeMode" Value="CanResizeWithGrip" />
                                <Condition Property="WindowState" Value="Normal" />
                            </MultiTrigger.Conditions>
                            <Setter Property="Visibility" TargetName="WindowResizeGrip" Value="Visible" />
                        </MultiTrigger>
                        <!--<Trigger Property="IsActive" Value="False">
                            <Setter Property="Opacity" Value="{StaticResource InactiveOpacity}" />
                        </Trigger>-->
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="WindowTabControlStyle" TargetType="TabControl">
        <Setter Property="IsSynchronizedWithCurrentItem" Value="True" />
        <Setter Property="Background" Value="{StaticResource PrimaryColorBrush}" />
        <Setter Property="Padding" Value="{StaticResource CellThickness}" />
        <Setter Property="ItemContainerStyle">
            <Setter.Value>
                <Style TargetType="TabItem" BasedOn="{StaticResource TabItemStyle}">
                    <Setter Property="IsSelected" Value="{Binding IsSelected, Mode=OneWayToSource}" />
                </Style>
            </Setter.Value>
        </Setter>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="TabControl">
                    <Grid>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="Auto" />
                            <RowDefinition Height="*" />
                            <RowDefinition Height="Auto" />
                        </Grid.RowDefinitions>

                        <Border Grid.Row="0" BorderThickness="0, 0, 0, 1"
                                BorderBrush="{StaticResource ControlBorderBrush}"
                                Background="{StaticResource ControlBrush}"
                                helper:WindowDragBehavior.LeftMouseButtonDrag="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type Window}}}"
                                helper:ControlDoubleClickBehavior.ExecuteCommand="{DynamicResource MaximizeCommand}"
                                helper:ControlDoubleClickBehavior.ExecuteCommandParameter="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type Window}}}"
                                helper:ShowSystemMenuBehavior.TargetWindow="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type Window}}}">
                            <Grid>
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="Auto" />
                                    <ColumnDefinition Width="*" />
                                    <ColumnDefinition Width="Auto" />
                                </Grid.ColumnDefinitions>
                                <Image Grid.Column="0" Width="65" VerticalAlignment="Center" Margin="10, 0, 0, 0"
                                       Source="pack://application:,,,/Resources/Images/Logo.png" />

                                <StackPanel Grid.Column="1" Orientation="Horizontal" HorizontalAlignment="Center"
                                            VerticalAlignment="Bottom">
                                    <TabPanel x:Name="HeaderPanel" Panel.ZIndex="1" IsItemsHost="True"
                                              KeyboardNavigation.TabIndex="1"
                                              KeyboardNavigation.DirectionalNavigation="Cycle" />
                                    <ItemsControl ItemsSource="{Binding Commands}" VerticalAlignment="Center">
                                        <ItemsControl.ItemsPanel>
                                            <ItemsPanelTemplate>
                                                <StackPanel Orientation="Horizontal" />
                                            </ItemsPanelTemplate>
                                        </ItemsControl.ItemsPanel>
                                        <ItemsControl.ItemTemplate>
                                            <DataTemplate>
                                                <controls:IconButton Text="{Binding Text}"
                                                                     Icon="{helper:ResourceBinding Icon}"
                                                                     Command="{Binding Command}" Margin="8, 0"
                                                                     FontWeight="Bold"
                                                                     ToolTip="{Binding Tip, Mode=OneWay}" />
                                            </DataTemplate>
                                        </ItemsControl.ItemTemplate>
                                    </ItemsControl>
                                </StackPanel>
                                <StackPanel Grid.Column="2" Orientation="Horizontal" VerticalAlignment="Top"
                                            HorizontalAlignment="Right" Margin="0, 8, 8, 0"
                                            Background="{StaticResource AccentColorBrush}">
                                    <Button Command="{StaticResource MinimizeCommand}"
                                            CommandParameter="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type Window}}}"
                                            Style="{StaticResource ToolTinyButtonStyle}">
                                        <Path Data="{StaticResource MinimizeIcon}" />
                                    </Button>
                                    <Button Command="{StaticResource MaximizeCommand}"
                                            CommandParameter="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type Window}}}">
                                        <Button.Style>
                                            <Style TargetType="Button" BasedOn="{StaticResource ToolTinyButtonStyle}">
                                                <Setter Property="Content">
                                                    <Setter.Value>
                                                        <Path Data="{StaticResource MaximizeIcon}" />
                                                    </Setter.Value>
                                                </Setter>
                                                <Style.Triggers>
                                                    <DataTrigger
                                                        Binding="{Binding WindowState, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type Window}}}"
                                                        Value="{x:Static WindowState.Normal}">
                                                        <Setter Property="Content">
                                                            <Setter.Value>
                                                                <Path Data="{StaticResource RestoreIcon}" />
                                                            </Setter.Value>
                                                        </Setter>
                                                    </DataTrigger>
                                                </Style.Triggers>
                                            </Style>
                                        </Button.Style>
                                    </Button>
                                    <Button Command="{StaticResource CloseCommand}"
                                            CommandParameter="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type Window}}}"
                                            Style="{StaticResource ToolTinyButtonStyle}">
                                        <Path Data="{StaticResource CloseIcon}" />
                                    </Button>
                                </StackPanel>
                            </Grid>
                        </Border>

                        <Border Grid.Row="1" Background="{TemplateBinding Background}"
                                Padding="{TemplateBinding Padding}">
                            <ContentPresenter x:Name="PART_SelectedContentHost" Margin="{TemplateBinding Margin}"
                                              ContentSource="SelectedContent"
                                              HorizontalAlignment="Stretch" VerticalAlignment="Stretch" />
                        </Border>
                        <Border Grid.Row="2" Background="{StaticResource ControlBrush}"
                                BorderThickness="0, 1, 0, 0" BorderBrush="{StaticResource ControlBorderBrush}" />
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
</ResourceDictionary>